<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.stock.dao.StockDao">
    
	<sql id="stockColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.goods_no AS "goodsNo",
		a.goods_name AS "goodsName",
		a.goods_type AS "goodsType",
		a.repository_no AS "repositoryNo",
		a.amount AS "amount",
		a.packing_unit AS "packingUnit",
		a.product_id AS "product.id"
	</sql>
	
	<sql id="stockJoins">
	</sql>
	
    
	<select id="get" resultType="Stock" >
		SELECT 
			<include refid="stockColumns"/>
		FROM t_stock a
		<include refid="stockJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Stock" >
		SELECT 
			<include refid="stockColumns"/>
		FROM t_stock a
		<include refid="stockJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Stock" >
		SELECT 
			<include refid="stockColumns"/>
		FROM t_stock a
		<include refid="stockJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO t_stock(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			goods_no,
			goods_name,
			goods_type,
			repository_no,
			amount,
			packing_unit,
			product_id
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{goodsNo},
			#{goodsName},
			#{goodsType},
			#{repositoryNo},
			#{amount},
			#{packingUnit},
			#{product.id}
		)
	</insert>
	
	<update id="update">
		UPDATE t_stock SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			goods_no = #{goodsNo},
			goods_name = #{goodsName},
			goods_type = #{goodsType},
			repository_no = #{repositoryNo},
			amount = #{amount},
			packing_unit = #{packingUnit},
			product_id = #{product.id}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM t_stock
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE t_stock SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Stock" statementType="STATEMENT">
		select * FROM t_stock  where ${propertyName} = '${value}'
	</select>
	
</mapper>